// Copyright [2016] [Cuiting Shi ]
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// 
package rest

import "cbdforum/app-container/service/src/common"

// fabric rest api request
type CCRequest struct {
	JsonRPC string        `json:"jsonrpc"`
	Method  string        `json:"method"`
	Params  ChaincodeSpec `json:"params"`
	ID      int           `json:"id,omitempty"`
}

// fabric rest api response
type CCResponse struct {
	JsonRPC string   `json:"jsonrpc"`
	Result  Response `json:"result"`
	ID      int      `json:"id,omitempty"`
}
type Response struct {
	Status  string 	`json:"status,omitempty"`
	Message string  `json:"message,omitempty"`
}

type ChaincodeSpec struct {
	Type                 ChaincodeSpec_Type   `json:"type,omitempty"`
	ChaincodeID          *ChaincodeID         `json:"chaincodeID,omitempty"`
	CtorMsg              *ChaincodeInput      `json:"ctorMsg,omitempty"`
	Timeout              int32                `json:"timeout,omitempty"`
	SecureContext        string               `json:"secureContext,omitempty"`
	ConfidentialityLevel ConfidentialityLevel `json:"confidentialityLevel,omitempty"`
	Metadata             []byte               `json:"metadata,omitempty"`
	Attributes           []string             `json:"attributes,omitempty"`
}

type ChaincodeID struct {
	// deploy transaction will use the path
	Path string `json:"path,omitempty"`
	// all other requests will use the name (really a hashcode) generated by
	// the deploy transaction
	Name string `json:"name,omitempty"`
}

type ChaincodeInput struct {
	Function string   `json:"function"`
	Args     []string `json:"args"`
}

// Confidentiality Levels
type ConfidentialityLevel int32

const (
	ConfidentialityLevel_PUBLIC       ConfidentialityLevel = 0
	ConfidentialityLevel_CONFIDENTIAL ConfidentialityLevel = 1
)

type ChaincodeSpec_Type int32

const (
	ChaincodeSpec_UNDEFINED ChaincodeSpec_Type = 0
	ChaincodeSpec_GOLANG    ChaincodeSpec_Type = 1
	ChaincodeSpec_NODE      ChaincodeSpec_Type = 2
	ChaincodeSpec_CAR       ChaincodeSpec_Type = 3
	ChaincodeSpec_JAVA      ChaincodeSpec_Type = 4
)

// NewCCRequest returns a CCRequest,
// 	which is used to post to the fabric rest api to deploy, invoke or query the chaincode
func NewCCRequest( method string, chaincodeName string, funcName string, args... string) CCRequest {
	var ccReq CCRequest = CCRequest{
		JsonRPC: "2.0",
		Method: method,
		Params: ChaincodeSpec{
			Type: ChaincodeSpec_GOLANG,
			ChaincodeID: &ChaincodeID{
				Path:"",
				Name: chaincodeName,
			},
			CtorMsg: &ChaincodeInput{
				Function:funcName,
				Args: common.ToChaincodeArgs(args...),
			},
			ConfidentialityLevel: ConfidentialityLevel_PUBLIC,
		},
		ID: 1,
	}
	return ccReq
}
